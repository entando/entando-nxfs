openapi: 3.0.0
info:
  description: Simple file access APIs for the Entando Nx subsystem
  title: NxFs
  version: 0.0.1
servers:
- url: http://localhost:3000
paths:
  /api/nxfs/browse/{EncodedPath}:
    get:
      parameters:
      - description: the urlencoded path of the directory object
        explode: false
        in: path
        name: EncodedPath
        required: true
        schema:
          type: string
        style: simple
      - description: value that indicates the max nesting level of the directories
          reported back in the result (0=no limit)
        explode: true
        in: query
        name: maxdepth
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatDirectoryTree'
          description: Flat Directory Tree
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Gets the list of objects in a directory
    summary: Directory Browsing
  /api/nxfs/objects/{EncodedPath}:
    delete:
      parameters:
      - description: the urlencoded path of the directory object
        explode: false
        in: path
        name: EncodedPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Deletes an object
    get:
      parameters:
      - description: the urlencoded path of the directory object
        explode: false
        in: path
        name: EncodedPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObject'
          description: Directory Object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Gets an object
    put:
      parameters:
      - description: the urlencoded path of the directory object
        explode: false
        in: path
        name: EncodedPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryObject'
        description: The object to create or update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObject'
          description: Directory Object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Creates or updates an object
    summary: Directory Objects
  /api/nxfs/objects/{EncodedPath}/publish:
    post:
      parameters:
      - description: the urlencoded path of the directory object
        explode: false
        in: path
        name: EncodedPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObject'
          description: Directory Object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Publishes an object
components:
  parameters:
    EncodedPath:
      description: the urlencoded path of the directory object
      explode: false
      in: path
      name: EncodedPath
      required: true
      schema:
        type: string
      style: simple
  schemas:
    FlatDirectoryTree:
      example:
        list:
        - path: path
          size: 6
          _created:
            at: 2000-01-23T04:56:07.000+00:00
            by: by
          _updated:
            at: 2000-01-23T04:56:07.000+00:00
            by: by
          id: 0
        - path: path
          size: 6
          _created:
            at: 2000-01-23T04:56:07.000+00:00
            by: by
          _updated:
            at: 2000-01-23T04:56:07.000+00:00
            by: by
          id: 0
      properties:
        list:
          items:
            $ref: '#/components/schemas/DirectoryObject'
          type: array
      required:
      - list
    DirectoryObject:
      example:
        path: path
        size: 6
        _created:
          at: 2000-01-23T04:56:07.000+00:00
          by: by
        _updated:
          at: 2000-01-23T04:56:07.000+00:00
          by: by
        id: 0
      properties:
        id:
          format: int64
          type: integer
        path:
          type: string
        size:
          type: integer
        type:
          $ref: '#/components/schemas/ObjectType'
        _created:
          $ref: '#/components/schemas/ActionLog'
        _updated:
          $ref: '#/components/schemas/ActionLog'
      required:
      - id
      - name
    ActionLog:
      example:
        at: 2000-01-23T04:56:07.000+00:00
        by: by
      properties:
        at:
          format: date-time
          type: string
        by:
          type: string
      required:
      - at
      type: object
    ObjectType:
      description: |
        Type of object: - d: directory - f: file
      enum:
      - d
      - f
      type: string
    Error:
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
      type: object
