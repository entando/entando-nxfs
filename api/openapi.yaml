openapi: 3.0.0

#######################################################################################################################################################
info:
  version: 0.0.1
  title: NxFs
  description: Simple file access APIs for the Entando Nx subsystem

#######################################################################################################################################################
servers:
  - url: 'http://localhost:3000'

#######################################################################################################################################################
paths:
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /api/nxfs/browse/{EncodedPath}:
    summary: 'Directory Browsing'
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    get:
      summary: 'Gets the list of objects in a directory'
      parameters:
        - $ref: "#/components/parameters/EncodedPath"
        - in: query
          name: maxdepth
          description: value that indicates the max nesting level of the directories reported back in the result (0=no limit)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Flat Directory Tree'
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/FlatDirectoryTree"
        '400':
          description: 'EncodedPath param decode error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 'Path not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Error during browse operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /api/nxfs/objects/{EncodedPath}:
    summary: 'Directory Objects'
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    get:
      summary: 'Gets an object'
      parameters:
        - $ref: "#/components/parameters/EncodedPath"
      responses:
        '200':
          description: 'Directory Object'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryObject"
        '400':
          description: 'EncodedPath param decode error OR folder content requested OR error during content read'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 'Path not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    put:
      summary: 'Creates or updates an object'
      parameters:
        - $ref: "#/components/parameters/EncodedPath"
      requestBody:
        description: The object to create or update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileContent'
      responses:
        '200':
          description: 'Directory Object'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryObject"
        '400':
          description: 'EncodedPath param decode error OR inconsistent parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 'Path not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    delete:
      summary: 'Deletes an object'
      parameters:
        - $ref: "#/components/parameters/EncodedPath"
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'EncodedPath param decode error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: 'EncodedPath is dir but not empty'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Removal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /api/nxfs/objects/{EncodedPath}/publish:
    put:
      summary: 'Publishes an object'
      parameters:
        - $ref: "#/components/parameters/EncodedPath"
      responses:
        '200':
          description: 'Directory Object'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryObject"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /api/nxfs/objects/{EncodedPath}/unpublish:
    put:
      summary: 'Publishes an object'
      parameters:
        - $ref: "#/components/parameters/EncodedPath"
      responses:
        '200':
          description: 'Directory Object'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryObject"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
#######################################################################################################################################################
components:
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  parameters:
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    EncodedPath:
      name: EncodedPath
      in: path
      description: the urlencoded path of the directory object
      required: true
      schema:
        type: string
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  schemas:
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    FlatDirectoryTree:
      required:
        - list
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/DirectoryObject'
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    DirectoryObject:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        path:
          type: string
        size:
          type: integer
          format: int64
        type:
          description: "The type of object"
          $ref: '#/components/schemas/ObjectType'
        _created:
          description: "Matadata: creation information"
          $ref: '#/components/schemas/ActionLog'
        _updated:
          description: "Matadata: update information"
          $ref: '#/components/schemas/ActionLog'
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ActionLog:
      type: object
      required:
        - at
      properties:
        at:
          type: string
          format: date-time
        by:
          type: string
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ObjectType:
      description: >
        Type of object:
        - d: directory
        - f: file
      type: string
      enum: [d, f]
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    FileObject:
      allOf:     # Combines the BasicErrorModel and the inline model
        - $ref: '#/components/schemas/DirectoryObject'
        - type: object
          required:
            - content
          properties:
            content:
              type: string
